---
driver:
  name: vagrant
  provider: virtualbox
  vagrantfile_erb: Vagrantfile.erb
  provision: true
  network:
    - ["private_network", {type: "dhcp"}]
    #- ["private_network", {ip: "33.33.33.33"}]
    #- ["forwarded_port", {guest: 80, host: 8888}]
  customize:
    # it may require to set a route
    # sudo route add 10.0.0.0/24 -interface vboxnet0
    hostonlyadapter2: vboxnet0
    memory: 1024
    #cpuexecutioncap: 50
  synced_folders:
    - [".", "/vagrant", "create: true"]

provisioner:
  name: chef_zero
  require_chef_omnibus: true
  #require_chef_omnibus: 11.12.8
  #chef_omnibus_url https://www.chef.io/chef/install.sh
  #chef_omnibus_install_options: -d <%= ENV['HOME'] %>/.vagrant.d/cache/vagrant_omnibus
  chef_omnibus_install_options: -d /tmp/vagrant-cache/vagrant_omnibus
  #data_bags_path: chef/data_bags
  #roles_path: test/integration/roles
  #environments_path: test/integration/environments
  #nodes_path: test/integration/nodes
  #Use to specify the path from which non-cookbook files are copied to a Kitchen instance.
  #data_path: test/integration/data
  client_rb:
    environment: _default
    #http_proxy: http://192.168.1.1
    #https_proxy: http://192.168.2.2
  attributes:
    percona:
      #skip_passwords: true
      #apt_keyserver: 'hkp://keys.gnupg.net'
      master: '10.0.0.105'
      slaves:
      - '10.0.0.106'
      server:
        root_password: 'vagrant'
        debian_password: 'vagrant'
        #bind_to: 'private_ip'
        #includedir: '/etc/mysql/conf.d/'
        replication:
          password: 'vagrant'
    #authorization:
      #sudo:
        #users: ['vagrant']
        #passwordless: true


platforms:
  - name: ubuntu/trusty64
  - name: bento/centos-7.1

suites:
  - name: master
    driver:
      network:
        - ["private_network", {ip: "10.0.0.105"}]
    attributes:
      percona:
        server:
          bind_address: '10.0.0.105'
    run_list:
      - recipe[percona-multi::master]
      #- recipe[percona::server]
  - name: slave
    #excludes: ubuntu/trusty64
    driver:
      network:
        - ["private_network", {ip: "10.0.0.106"}]
    attributes:
          percona:
            server:
              bind_address: '10.0.0.106'
    run_list:
      - recipe[percona-multi::slave]


